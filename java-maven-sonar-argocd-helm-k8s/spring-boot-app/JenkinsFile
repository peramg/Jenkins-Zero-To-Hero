pipeline {
  agent any

  environment {
    SONAR_URL = "http://16.16.24.56:9000" // Replace with your actual SonarQube URL
    DOCKER_IMAGE = "peramg1/ultimate-cicd:${BUILD_NUMBER}"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "peramg"
  }

  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        // git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Build and Test') {
      steps {
        script {
          docker.image('peramg1/maven-abhishek-docker-agent:v2').inside('--user root -v /var/run/docker.sock:/var/run/docker.sock') {
            sh '''
              ls -ltr
              cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package
            '''
          }
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          script {
            docker.image('peramg1/maven-abhishek-docker-agent:v2').inside('--user root -v /var/run/docker.sock:/var/run/docker.sock') {
              sh '''
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && \
                mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL
              '''
            }
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          script {
            sh '''
              cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && \
              docker build -t $DOCKER_IMAGE .
            '''
            def dockerImage = docker.image(env.DOCKER_IMAGE)
            docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
              dockerImage.push()
            }
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "gnaneshperam985@gmail.com"
            git config user.name "peramg"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
